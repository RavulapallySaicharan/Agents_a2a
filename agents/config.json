{
    "agents": [
        {
            "description": "Performs data analysis and generates insights",
            "file": "data_analysis_agent.py",
            "name": "Data Analysis Agent",
            "port": 5009,
            "skills": [
                {
                    "description": "Analyze data and generate insights",
                    "name": "Analyze Data",
                    "tags": [
                        "analysis",
                        "data",
                        "insights"
                    ],
                    "inputs": [
                        "data",
                        "analysis_type",
                        "parameters"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Creates visualizations from data",
            "file": "data_visualization_agent.py",
            "name": "Data Visualization Agent",
            "port": 5010,
            "skills": [
                {
                    "description": "Generate visualizations from provided data",
                    "name": "Create Visualization",
                    "tags": [
                        "visualization",
                        "charts",
                        "graphs"
                    ],
                    "inputs": [
                        "data",
                        "chart_type",
                        "visualization_options"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Cleans and transforms data for analysis",
            "file": "data_wrangling_agent.py",
            "name": "Data Wrangling Agent",
            "port": 5011,
            "skills": [
                {
                    "description": "Clean and transform data for analysis",
                    "name": "Wrangle Data",
                    "tags": [
                        "data-cleaning",
                        "transformation",
                        "preprocessing"
                    ],
                    "inputs": [
                        "data",
                        "cleaning_rules",
                        "transformation_steps"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Generates dynamic few-shot examples for various tasks",
            "file": "dynamic_fewshots_agent.py",
            "name": "Dynamic Fewshots Agent",
            "port": 5006,
            "skills": [
                {
                    "description": "Create dynamic few-shot examples for specified tasks",
                    "name": "Generate Examples",
                    "tags": [
                        "few-shot",
                        "examples",
                        "learning"
                    ],
                    "inputs": [
                        "task_description",
                        "number_of_examples",
                        "example_format"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Controls and manages access to other agents and services",
            "file": "gating_agent.py",
            "name": "Gating Agent",
            "port": 5007,
            "skills": [
                {
                    "description": "Manage and control access to agents and services",
                    "name": "Control Access",
                    "tags": [
                        "access-control",
                        "gateway",
                        "security"
                    ],
                    "inputs": [
                        "request_type",
                        "user_credentials",
                        "resource_id"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Provides guidelines and best practices for various tasks",
            "file": "guideline_agent.py",
            "name": "Guideline Agent",
            "port": 5004,
            "skills": [
                {
                    "description": "Generate guidelines for specified tasks or topics",
                    "name": "Generate Guidelines",
                    "tags": [
                        "guidelines",
                        "best-practices",
                        "advice"
                    ],
                    "inputs": [
                        "topic",
                        "context",
                        "specific_requirements"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Reconstructs natural language queries from various inputs",
            "file": "nlq_reconstruction_agent.py",
            "name": "NLQ Reconstruction Agent",
            "port": 5008,
            "skills": [
                {
                    "description": "Convert various inputs into natural language queries",
                    "name": "Reconstruct Query",
                    "tags": [
                        "nlq",
                        "query",
                        "reconstruction"
                    ],
                    "inputs": [
                        "input_format",
                        "query_elements",
                        "context"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Generates SQL queries based on natural language input",
            "file": "sql_generation_agent.py",
            "name": "SQL Generation Agent",
            "port": 5005,
            "skills": [
                {
                    "description": "Convert natural language to SQL queries",
                    "name": "Generate SQL",
                    "tags": [
                        "sql",
                        "database",
                        "query"
                    ],
                    "inputs": [
                        "natural_language_query",
                        "database_schema",
                        "query_type"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Analyzes text to determine sentiment and emotional tone",
            "file": "sentiment_analyzer_agent.py",
            "name": "Sentiment Analyzer",
            "port": 5013,
            "skills": [
                {
                    "description": "Analyzes text to determine sentiment and emotional tone",
                    "name": "Sentiment Analyzer",
                    "tags": [
                        "nlp",
                        "sentiment-analysis",
                        "emotion-detection"
                    ],
                    "inputs": [
                        "text",
                        "analysis_depth",
                        "emotion_categories"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Generates concise summaries of provided text content",
            "file": "summarizer_agent.py",
            "name": "Summarizer Agent",
            "port": 5003,
            "skills": [
                {
                    "description": "Create a concise summary of the provided text",
                    "name": "Summarize Text",
                    "tags": [
                        "summarize",
                        "text",
                        "content"
                    ],
                    "inputs": [
                        "text"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Creates sql from user nlq",
            "file": "text2sql_agent.py",
            "name": "Text2SQL",
            "port": 5012,
            "skills": [
                {
                    "description": "Creates sql from user nlq",
                    "name": "Text2SQL",
                    "tags": [
                        "nlq",
                        "sql",
                        "text2sql"
                    ],
                    "inputs": [
                        "userInput"
                    ]
                }
            ],
            "version": "1.0.0"
        },
        {
            "description": "Translates text into specified target languages using OpenAI API",
            "file": "translator_agent.py",
            "name": "Translator Agent",
            "port": 5002,
            "skills": [
                {
                    "description": "Translate text to a specified target language",
                    "name": "Translate Text",
                    "tags": [
                        "translate",
                        "language",
                        "multilingual"
                    ],
                    "inputs": [
                        "text",
                        "target_language"
                    ]
                }
            ],
            "version": "1.0.0"
        }
    ],
    "server_config": {
        "default_port": 5001,
        "host": "localhost",
        "log_level": "INFO",
        "max_retries": 3,
        "timeout": 30
    }
}